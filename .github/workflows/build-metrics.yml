name: Focus iOS 15 & 16 tests
on:
  workflow_dispatch:

env:
    browser: focus-ios
    xcode_version: 15.4
    test_results_directory: /Users/runner/tmp

jobs:
  Focus-iOS-Tests:
    name: Focus iOS
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        include:
          - ios_version: 16.4
            ios_simulator: iPhone 14
          - ios_version: 15.5
            ios_simulator: iPhone 13
    steps:
      - name: Check out source code
        uses: actions/checkout@v4.1.7
        with:
          repository: mozilla-mobile/firefox-ios
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install packages
        run: |
          pip3 install virtualenv pipenv
          gem install xcpretty -v 0.3.0
          pip install blockkit==1.9.1
          npm install -g junit-report-merger@7.0.0
      - name: Setup Xcode
        id: xcode
        run: |
          sudo rm -rf /Applications/Xcode.app
          sudo xcode-select -s /Applications/Xcode_${{ env.xcode_version }}.app/Contents/Developer
          xcodebuild -version
          ./checkout.sh
          ./bootstrap.sh --force

          # Free up disk space: Delete Xcode not in use
          sudo rm -fr /Applications/Xcode_16*
      - name: Create iOS ${{ matrix.ios_version }} simulator
        id: setup-simulator
        run: |
          sudo xcodes runtimes install "iOS ${{ matrix.ios_version }}"
          xcrun simctl list devices iphone
      - name: Build Focus
        id: compile
        run: |
          xcodebuild build-for-testing \
            -project Blockzilla.xcodeproj -scheme Focus \
            -configuration FocusDebug \
            CODE_SIGNING_ALLOWED=NO -destination \
            'platform=iOS Simulator,name=${{ matrix.ios_simulator }},OS=${{ matrix.ios_version }}'
        working-directory: focus-ios
      - name: Run smoke tests
        id: run-smoketests
        run: |
          xcodebuild test-without-building \
            -project Blockzilla.xcodeproj -scheme Focus \
            -configuration FocusDebug \
            CODE_SIGNING_ALLOWED=NO \
            -destination 'platform=iOS Simulator,name=${{ matrix.ios_simulator }},OS=${{ matrix.ios_version }}' \
            -testPlan SmokeTest \
            -resultBundlePath ${{ env.test_results_directory }}/results-smoketests \
            | tee xcodebuild-smoketests.log | xcpretty -r junit --output ./junit-smoketests.xml && exit ${PIPESTATUS[0]}
        working-directory: ${{ env.browser }}
        continue-on-error: true
      - name: Run full functional tests
        id: run-fullfunctionaltests
        run: |
          xcodebuild test-without-building \
            -project Blockzilla.xcodeproj -scheme Focus \
            -configuration FocusDebug \
            CODE_SIGNING_ALLOWED=NO \
            -destination 'platform=iOS Simulator,name=${{ matrix.ios_simulator }},OS=${{ matrix.ios_version }}' \
            -testPlan FullFunctionalTests \
            -resultBundlePath ${{ env.test_results_directory }}/results-fullfunctionaltests \
            | tee xcodebuild-fullfunctionaltests.log | xcpretty -r junit --output ./junit-fullfunctionaltests.xml && exit ${PIPESTATUS[0]}
        working-directory: ${{ env.browser }}
        continue-on-error: true
      - name: Determine pass/fail status
        id: passfail
        run: |
          echo "Smoke Tests status: "${{ steps.run-smoketests.outcome }}
          echo "Full Functional Tests status: "${{ steps.run-fullfunctionaltests.outcome }}
          if [[ ${{ steps.run-smoketests.outcome }} != 'success' 
                || ${{ steps.run-fullfunctionaltests.outcome }} != 'success' ]]; then
            exit 1
          else
            exit 0
          fi
        continue-on-error: true
      - name: Print test report
        id: test-report
        run: |
          jrm combined.xml junit-*.xml
          python ../test-fixtures/ci/convert_junit_to_markdown.py --smoke --github --${{ env.browser }} ./combined.xml ./github.md
          cat github.md >> $GITHUB_STEP_SUMMARY
          python ../test-fixtures/ci/convert_junit_to_markdown.py --smoke --slack --${{ env.browser }} ./combined.xml ./slack.json
          mv ./combined.xml "junit-focus-ios-${{ matrix.ios_simulator }}-${{ matrix.ios_version }}-`date +"%Y-%m-%d"`.xml"
        working-directory:  ${{ env.browser }}
      - name: Upload junit files
        id: upload-junit
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ env.browser }}-${{ matrix.ios_simulator }}-${{ matrix.ios_version }}-junit-${{ github.run_number }}
          path: ${{ env.browser }}/junit-focus-ios-*.xml
          retention-days: 90
      - name: Upload log file
        id: upload-log
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ env.browser }}-${{ matrix.ios_simulator }}-xcodebuildlog-${{ github.run_number }}
          path: ${{ env.browser }}/xcodebuild-*.log
          retention-days: 90
      - name: Return fail status if a test fails
        run: |
          exit ${{ steps.passfail.outcome == 'success' && '0' || '1' }}   