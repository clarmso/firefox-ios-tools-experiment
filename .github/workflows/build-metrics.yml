name: Firefox & Focus iOS build & test
on:
  workflow_dispatch:
    inputs:
      runner:
        description: "Github Actions runner"
        default: "macos-14"
        required: true
        type: string
      xcode:
        description: "Xcode version"
        default: "15.3"
        required: true
        type: string
      ios_simulator:
        description: "iPhone/iPad simulator"
        default: "iPhone 15"
        required: true
        type: string
      ios_version:
        description: "iOS version"
        default: "17.4"
        required: true
        type: string
      branch:
        description: "Branch"
        default: "main"
        required: true
        type: string
      run_firefox:
        default: true
        required: true
        type: boolean
      run_focus:
        default: true
        required: true
        type: boolean

jobs:
  Dump-env-info:
    name: Dump environment info
    runs-on: ${{ inputs.runner }}
    steps:
      - run: |
          echo "Runner: ${{ inputs.runner }}"
          echo "Xcode:  ${{ inputs.xcode }}"
          echo "Device: ${{ inputs.ios_simulator }}"
          echo "iOS:    ${{ inputs.ios_version }}"
          echo "Branch: ${{ inputs.branch }}"
          sw_vers
          uname -av
  Firefox:
    name: Firefox (Xcode ${{ inputs.xcode }}, ${{ inputs.ios_simulator }}, iOS ${{ inputs.ios_version }}, ${{ inputs.branch }} branch)
    if: false
    needs: Dump-env-info
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Clone firefox-ios repo
        uses: actions/checkout@v4
        with:
          repository: mozilla-mobile/firefox-ios
          ref: ${{ inputs.branch }}
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.11'
      - name: Install Python packages required
        run: |
          brew update
          pip3 install virtualenv pipenv
      - name: Setup Xcode
        run: |
          sudo rm -rf /Applications/Xcode.app
          sudo xcode-select -s /Applications/Xcode_${{ inputs.xcode }}.app/Contents/Developer
          xcodebuild -version
      - name: Run setup scripts for Firefox
        run: |
          sh ./bootstrap.sh --force
      - name: Resolve dependencies
        run: |
          rm -fr ~/Library/Developer/Xcode/DerivedData/Client-*
          xcodebuild -resolvePackageDependencies -onlyUsePackageVersionsFromResolvedFile
        working-directory: firefox-ios
      - name: Build Firefox
        run: 
          time xcodebuild build-for-testing -project Client.xcodeproj -scheme Fennec -configuration Fennec -sdk iphonesimulator -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}'
        working-directory: firefox-ios
      - name: Size of source and app files
        run: |
          du -sh .
          du -sh ~/Library/Developer/Xcode/DerivedData/Client-*/Build/Products/Fennec-iphonesimulator/Client.app
        working-directory: firefox-ios
      - name: Run unit tests
        run: |
          xcodebuild test-without-building -target Client -scheme Fennec -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}'
        working-directory: firefox-ios
        continue-on-error: true
      - name: Run smoke tests
        run: |
          xcodebuild test-without-building -target Client -scheme Fennec -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}' -testPlan Smoketest1
          xcodebuild test-without-building -target Client -scheme Fennec -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}' -testPlan Smoketest2
          xcodebuild test-without-building -target Client -scheme Fennec -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}' -testPlan Smoketest3
          xcodebuild test-without-building -target Client -scheme Fennec -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}' -testPlan Smoketest4 
        working-directory: firefox-ios
        continue-on-error: true
  Focus:
    name: Focus (Xcode ${{ inputs.xcode }}, ${{ inputs.ios_simulator }}, iOS ${{ inputs.ios_version }}, ${{ inputs.branch }} branch)
    needs: Dump-env-info
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Clone firefox-ios repo
        uses: actions/checkout@v4
        with:
          repository: mozilla-mobile/firefox-ios
          ref: ${{ inputs.branch }}
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python packages required
        run: |
          brew update
          pip3 install virtualenv pipenv
      - name: Setup Xcode
        run: |
          sudo rm -rf /Applications/Xcode.app
          sudo xcode-select -s /Applications/Xcode_${{ inputs.xcode }}.app/Contents/Developer
          xcodebuild -version
      - name: Run setup scripts for Focus
        run: |
          sh ./checkout.sh
      - name: Create iOS 16 simulator
        run: |
          sudo xcode-select -s /Applications/Xcode_14.3.1.app/Contents/Developer
          sudo xcodes runtimes install "iOS ${{ inputs.ios_version }}"
          sudo xcode-select -s /Applications/Xcode_${{ inputs.xcode }}.app/Contents/Developer
      - name: Resolve dependencies
        run: |
          xcodebuild -resolvePackageDependencies -onlyUsePackageVersionsFromResolvedFile
        working-directory: focus-ios
      - name: Build Focus
        run: xcodebuild build-for-testing -derivedDataPath ~/DerivedData -scheme Focus -target XCUITest -configuration FocusDebug -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}' COMPILER_INDEX_STORE_ENABLE=NO CODE_SIGN_IDENTITY= CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO ARCH="arm64"
        working-directory: focus-ios
      - name: Run unit tests
        run: |
          xcodebuild test-without-building -derivedDataPath ~/DerivedData -scheme Focus -target XCUITest -configuration FocusDebug -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}' -testPlan UnitTests
        working-directory: focus-ios
        continue-on-error: true
      - name: Run smoke tests
        run: |
          xcodebuild test-without-building -derivedDataPath ~/DerivedData -scheme Focus -target XCUITest -configuration FocusDebug -destination 'platform=iOS Simulator,name=${{ inputs.ios_simulator }},OS=${{ inputs.ios_version }}' -testPlan SmokeTest
        working-directory: focus-ios
        continue-on-error: true